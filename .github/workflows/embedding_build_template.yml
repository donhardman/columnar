name: Build Template

on:
  workflow_call:
    inputs:
      runner:
        required: false
        type: string
        default: "ubuntu-22.04"
      distr:
        required: true
        type: string
      arch:
        required: true
        type: string
      artifact_list:
        required: false
        type: string
        default: "target/release/lib*.so"
      setup:
        required: false
        type: string
        default: ""

jobs:
  build:
    runs-on: ${{ inputs.runner }}
    defaults:
      run:
        shell: bash
    timeout-minutes: 30
    steps:
      - name: Set up Docker
        if: ${{ startsWith(inputs.runner, 'linux') }}
        uses: docker/setup-buildx-action@v3
      - name: Setup
        if: ${{ inputs.setup }}
        run: |
          ${{ inputs.setup }}

      - name: Check distribution type
        id: vars
        run: |
          declare -A image_map=(
            [linux]="joseluisq/rust-linux-darwin-builder:1.83.0"
            [macos]="joseluisq/rust-linux-darwin-builder:1.83.0"
          )

          image=${image_map[${{ inputs.distr }}]}
          echo "image=${image}" >> $GITHUB_OUTPUT

          declare -A target_map=(
            [linux]="unknown-linux-musl"
            [macos]="apple-darwin"
            [windows]="pc-windows-msvc"
          )

          if [[ -n "${target_map[${{ inputs.distr }}]}" ]]; then
            target="${{ inputs.arch }}-${target_map[${{ inputs.distr }}]}"
            echo "target=${target}" >> $GITHUB_OUTPUT
          else
            echo "Unsupported distribution type: ${{ inputs.distr }}"
            exit 1
          fi

      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ steps.vars.outputs.target }}
          override: true
      - name: Prepare build args
        id: params
        run: |
          args=(
            "--target" 
            "${{ steps.vars.outputs.target }}" 
            "--lib"
            "--release" 
            "--manifest-path" 
            "./embeddings/Cargo.toml"
          )
          echo "args=${args[@]}" >> $GITHUB_OUTPUT

          platform=debian
          if [[ "${{ inputs.distr }}" =~ rhel.* ]]; then
            platform=rhel
          elif [[ "${{ inputs.distr }}" =~ macos.* ]]; then
            platform=macos
          elif [[ "${{ inputs.distr }}" =~ windows.* ]]; then
            platform=windows
          fi

          cross_template="./embeddings/Cross.toml.${platform}"
          if [[ -f $cross_template ]]; then
            export CROSS_IMAGE="${{ steps.vars.outputs.image }}"
            envsubst < $cross_template > "./embeddings/Cross.toml"
          fi

      - name: Build
        uses: actions-rs/cargo@v1
        env: 
          CC: ${{ inputs.distr == 'macos' && 'o64-clang' || ''}}
          CXX: ${{ inputs.distr == 'macos' && 'o64-clang++' || ''}}
        with:
          use-cross: true
          command: build
          args: ${{ steps.params.outputs.args }}
      - run: | 
          mkdir build
          ls -la ./embeddings/target/release/*
          find ./embeddings/target -type f \( -name "libmanticoresearch*.a" -o -name "libmanticoresearch*.lib" \) -ls -exec mv {} ./build \;

      - name: Upload build artifacts
        if: success()
        uses: manticoresoftware/upload_artifact_with_retries@v2
        with:
          name: build_${{ inputs.distr }}_${{ inputs.CTEST_CONFIGURATION_TYPE }}_${{ inputs.arch }}
          path: ./build/*
