name: Build Template

on:
  workflow_call:
    inputs:
      runner:
        required: false
        type: string
        default: "ubuntu-22.04"
      distr:
        required: true
        type: string
      arch:
        required: true
        type: string
      artifact_list:
        required: false
        type: string
        default: "target/release/lib*.so"
      setup:
        required: false
        type: string
        default: ""

jobs:
  build:
    runs-on: ${{ inputs.runner }}
    defaults:
      run:
        shell: bash
    timeout-minutes: 30
    steps:
      - name: Setup
        if: ${{ inputs.setup }}
        run: |
          ${{ inputs.setup }}
        shell: bash

      - name: Check distribution type
        id: vars
        run: |
          declare -A image_map=(
            [bionic]="ubuntu:bionic"
            [focal]="ubuntu:focal"
            [jammy]="ubuntu:jammy"
            [buster]="debian:buster"
            [bullseye]="debian:bullseye"
            [bookworm]="debian:bookworm"
            [rhel7]="centos:7"
            [rhel8]="centos:8"
            [rhel9]="oraclelinux:9"
          )
          
          echo "image=${image_map[${{ inputs.distr }}]}" >> $GITHUB_OUTPUT

          declare -A target_map=(
            [bionic]="unknown-linux-gnu"
            [focal]="unknown-linux-gnu"
            [jammy]="unknown-linux-gnu"
            [buster]="unknown-linux-gnu"
            [bullseye]="unknown-linux-gnu"
            [bookworm]="unknown-linux-gnu"
            [rhel7]="unknown-linux-gnu"
            [rhel8]="unknown-linux-gnu"
            [rhel9]="unknown-linux-gnu"
            [macos]="apple-darwin-gcc"
            [windows]="pc-windows-msvc"
          )

          if [[ -n "${target_map[${{ inputs.distr }}]}" ]]; then
            echo "target=${{ inputs.arch }}-${target_map[${{ inputs.distr }}]}" >> $GITHUB_OUTPUT
          else
            echo "Unsupported distribution type: ${{ inputs.distr }}"
            exit 1
          fi

      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ steps.vars.outputs.target }}
          override: true
      - name: Build
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --target ${{ steps.vars.outputs.target }} --release --manifest-path ./embeddings/Cargo.toml --image {{ $steps.vars.outputs.image }}
      - run: | 
          ls -lt target/*/*.so

      - name: Upload build artifacts
        if: success()
        uses: manticoresoftware/upload_artifact_with_retries@v2
        with:
          name: build_${{ inputs.distr }}_${{ inputs.CTEST_CONFIGURATION_TYPE }}_${{ inputs.arch }}
          path: ${{ inputs.artifact_list }}
